const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { execute } = require('../../events/client/ready');
const { User } = require(`../../schemas/userdata`);
const chalk = require(`chalk`);

module.exports = {
    data: new SlashCommandBuilder()
        .setName(`remove-xp`)
        .setDescription(`–£–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`)
        .addStringOption(option => option
            .setName(`—Ç–∏–ø`)
            .setDescription(`–¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞`)
            .setAutocomplete(true)
            .setRequired(true)
        )
        .addUserOption(option => option
            .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç.`)
            .setRequired(true)
        )
        .addNumberOption(option => option
            .setName(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∏—Ä–∞–µ–º–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.`)
            .setRequired(true)
        ),

    async autoComplete(interaction, client) {

        const focusedValue = interaction.options.getFocused();
        const choices = ['–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', '–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤', '–†—É–º–±–∏–∫–∏'];
        const filtered = choices.filter(choice => choice.startsWith(focusedValue));
        await interaction.respond(
            filtered.map(choice => ({ name: choice, value: choice })),
        );
    },
    async execute(interaction, client) {

        const user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`) || interaction.member.user;
        const userData = await User.findOne({ userid: user.id }) || new User({ userid: user.id, name: user.username })
        switch (interaction.options.getString(`—Ç–∏–ø`)) {
            case `–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {
                
                userData.exp -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);
                userData.totalexp -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.totalexp} < 0)`)
                if (userData.totalexp < 0) return interaction.reply({
                    embeds: [not_possible]
                })

                userData.save();
                interaction.reply(`–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üåÄ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}!`)
                console.log(chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –æ–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.exp} –æ–ø—ã—Ç–∞ –∏ ${userData.level} —É—Ä–æ–≤–µ–Ω—å.`))
            };

                break;
            case `–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤`: {
                userData.rank -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.rank} < 0)`)
                if (userData.rank < 0) return interaction.reply({
                    embeds: [not_possible]
                })
                userData.save();
                interaction.reply(`–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üí† —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.rank} –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤!`)
                console.log(chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –æ–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.rank} –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤.`))

            }

                break;
            case `–†—É–º–±–∏–∫–∏`: {
                userData.rumbik -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–º–±–∏–∫–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.rumbik} < 0)`)
                if (userData.rumbik < 0) return interaction.reply({
                    embeds: [not_possible]
                })
                userData.save();
                interaction.reply(`–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}<:Rumbik:883638847056003072> —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.rumbik} —Ä—É–º–±–∏–∫–æ–≤!`)
                console.log(chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª —Ä—É–º–±–∏–∫–∏]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.rumbik} —Ä—É–º–±–∏–∫–æ–≤.`))
            }

                break;

            default:
                break;
        }
    }
}