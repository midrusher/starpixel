const { SlashCommandBuilder, Attachment, EmbedBuilder } = require('discord.js');
 
const { User } = require(`../../schemas/userdata`);


module.exports = {
    data: new SlashCommandBuilder()
        .setName(`rank`)
        .setDescription(`–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.`)
        .addUserOption(option => option
            .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
            .setRequired(false)
            .setDescription(`–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`)
        ),
    async execute(interaction, client) {
        const user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`) || interaction.member.user;
        const userData = await User.findOne({ userid: user.id })
        const neededXP = 5 * (Math.pow(userData.level, 2)) + (50 * userData.level) + 100;


        if (userData.totalexp == 0) return interaction.reply({
            content: `–£ ${user} –Ω–µ—Ç –æ–ø—ã—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.`,
            ephemeral: true
        });

        const embed = new EmbedBuilder()
            .setColor(process.env.bot_color)
            .setAuthor({
                name: `–û–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.username}`
            })
            .setThumbnail(user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setDescription(
`**–£–†–û–í–ï–ù–¨** - ${userData.level}
**–û–ø—ã—Ç** - ${userData.exp}/${neededXP}üåÄ
**–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞** - ${userData.totalexp}`)

        return interaction.reply({
            embeds: [embed]
        })
    }
};