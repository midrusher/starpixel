const { SlashCommandBuilder, ModalBuilder, TextInputBuilder, ActionRowBuilder, TextInputStyle, EmbedBuilder } = require('discord.js');
const { execute } = require('../../events/client/start_bot/ready');
const { Apply } = require(`../../schemas/applications`)
const ch_list = require(`../../discord structure/channels.json`)

module.exports = {
    data: new SlashCommandBuilder()
        .setName(`application`)
        .setDescription(`–ó–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–∏–ª—å–¥–∏—é Starpixel`)
        .addSubcommand(subcommand => subcommand
            .setName(`create`)
            .setDescription(`–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –≥–∏–ª—å–¥–∏—é`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`delete`)
            .setDescription(`–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–∏–ª—å–¥–∏—é`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`status`)
            .setDescription(`–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`setstatus`)
            .setDescription(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏`)
            .addUserOption(option => option
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å`)
                .setRequired(true)
            )
            .addStringOption(option => option
                .setName(`—Å—Ç–∞—Ç—É—Å`)
                .setDescription(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏`)
                .addChoices(
                    {
                        name: `–ü—Ä–∏–Ω—è—Ç–∞`, value: `‚úÖ`
                    },
                    {
                        name: `–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏`, value: `üïí`
                    },
                    {
                        name: `–û—Ç–∫–ª–æ–Ω–µ–Ω–∞`, value: `‚ùå`
                    }
                )
                .setRequired(true)
            )
        ),
    async execute(interaction, client) {
        const { Guild } = require(`../../schemas/guilddata`)
        const pluginData = await Guild.findOne({ id: interaction.guild.id })
        if (pluginData.plugins.welcome === false) return interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
        switch (interaction.options.getSubcommand()) {
            case `create`: {
                const member = interaction.member
                const guild = interaction.guild
                if (member.roles.cache.has(`504887113649750016`)) {
                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: `‚ùó –í—ã —É–∂–µ –≤ –≥–∏–ª—å–¥–∏–∏!`
                        })
                        .setDescription(`–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥–∏–ª—å–¥–∏–∏ Starpixel! –ó–∞—á–µ–º –≤–∞–º –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑? üòÇ`)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setColor(`DarkRed`)
                        .setTimestamp(Date.now())

                    return interaction.reply({
                        embeds: [embed],
                        ephemeral: true
                    })
                }

                if (interaction.channel.id !== ch_list.apply) {
                    const embed = new EmbedBuilder()
                        .setColor(`DarkRed`)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setTitle(`‚ùó –ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ!`)
                        .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <#${ch_list.apply}>!`)
                        .setTimestamp(Date.now())

                    return interaction.reply({
                        embeds: [embed],
                        ephemeral: true
                    })
                }

                let appData = await Apply.findOne({ userid: member.user.id, guildid: guild.id })
                let apply
                let question1
                let question2
                let question3
                let question4
                let question5

                if (!appData) {

                    apply = new ModalBuilder()
                        .setCustomId(`apply1`)
                        .setTitle(`–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ (1/2)`)

                    question1 = new TextInputBuilder()
                        .setCustomId(`first`)
                        .setLabel(`–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?`)
                        .setPlaceholder(`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤! –ù–∞–ø—Ä–∏–º–µ—Ä: –î–º–∏—Ç—Ä–∏–π`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)

                    question2 = new TextInputBuilder()
                        .setCustomId(`second`)
                        .setLabel(`–ö–∞–∫–æ–π —É –≤–∞—Å –Ω–∏–∫–Ω–µ–π–º –≤ Minecraft?`)
                        .setPlaceholder(`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤–æ–º! –ù–∞–ø—Ä–∏–º–µ—Ä: iDoggo`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)
                        .setMaxLength(16)

                    question3 = new TextInputBuilder()
                        .setCustomId(`third`)
                        .setLabel(`–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?`)
                        .setPlaceholder(`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤! –ù–∞–ø—Ä–∏–º–µ—Ä: 17`)
                        .setRequired(true)
                        .setMaxLength(2)
                        .setStyle(TextInputStyle.Short)

                    question4 = new TextInputBuilder()
                        .setCustomId(`fourth`)
                        .setLabel(`–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª?`)
                        .setPlaceholder(`–ù–∞–ª–∏—á–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Ç–æ–∂–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)

                    question5 = new TextInputBuilder()
                        .setCustomId(`fifth`)
                        .setLabel(`–û–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –ª–∏ –≤—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏?`)
                        .setPlaceholder(`–ù–∞–ø–∏—à–∏—Ç–µ, –≥–æ—Ç–æ–≤—ã –ª–∏ —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –ª–∏ –≤—ã —Å –Ω–∏–º–∏.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)


                } else if (appData) {
                    if (appData.status == `–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏` || appData.status == `–ü—Ä–∏–Ω—è—Ç–∞`) return interaction.reply({
                        content: `–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ—ë –∏–∑–º–µ–Ω–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–¥–∞–ª–∏—Ç–µ –µ—ë —Å –ø–æ–º–æ—â—å—é \`/application delete\` –∏ –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è! (–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∑–∞–ø–æ–ª–Ω–∏–ª–∏, —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è!)`
                    })
                    apply = new ModalBuilder()
                        .setCustomId(`apply1`)
                        .setTitle(`–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ (1/2)`)

                    question1 = new TextInputBuilder()
                        .setCustomId(`first`)
                        .setLabel(`–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?`)
                        .setPlaceholder(`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)
                        .setValue(appData.que1)

                    question2 = new TextInputBuilder()
                        .setCustomId(`second`)
                        .setLabel(`–ö–∞–∫–æ–π —É –≤–∞—Å –Ω–∏–∫–Ω–µ–π–º –≤ Minecraft?`)
                        .setPlaceholder(`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)
                        .setMaxLength(16)
                        .setValue(appData.que2)

                    question3 = new TextInputBuilder()
                        .setCustomId(`third`)
                        .setLabel(`–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?`)
                        .setPlaceholder(`–í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 14 –ª–µ—Ç –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)
                        .setValue(appData.que3)

                    question4 = new TextInputBuilder()
                        .setCustomId(`fourth`)
                        .setLabel(`–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª?`)
                        .setPlaceholder(`–ù–∞–ª–∏—á–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Ç–æ–∂–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)
                        .setValue(appData.que4)

                    question5 = new TextInputBuilder()
                        .setCustomId(`fifth`)
                        .setLabel(`–û–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –ª–∏ –≤—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏?`)
                        .setPlaceholder(`–ù–∞–ø–∏—à–∏—Ç–µ, –≥–æ—Ç–æ–≤—ã –ª–∏ —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –ª–∏ –≤—ã —Å –Ω–∏–º–∏.`)
                        .setRequired(true)
                        .setStyle(TextInputStyle.Short)
                        .setValue(appData.que5)
                }



                apply.addComponents(new ActionRowBuilder().addComponents(question1)).addComponents(new ActionRowBuilder().addComponents(question2)).addComponents(new ActionRowBuilder().addComponents(question3)).addComponents(new ActionRowBuilder().addComponents(question4)).addComponents(new ActionRowBuilder().addComponents(question5))
                await interaction.showModal(apply)
            }

                break;
            case `delete`: {
                const member = interaction.member
                const guild = interaction.guild
                if (member.roles.cache.has(`504887113649750016`)) {
                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: `‚ùó –í—ã —É–∂–µ –≤ –≥–∏–ª—å–¥–∏–∏!`
                        })
                        .setDescription(`–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥–∏–ª—å–¥–∏–∏ Starpixel! –ó–∞—á–µ–º –≤–∞–º —É–¥–∞–ª—è—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É? üòÇ`)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setColor(`DarkRed`)
                        .setTimestamp(Date.now())

                    return interaction.reply({
                        embeds: [embed],
                        ephemeral: true
                    })
                }
                let appData = await Apply.findOne({ userid: member.user.id, guildid: guild.id })
                if (!appData) return interaction.reply({
                    content: `–í—ã –Ω–µ –ø–æ–¥–∞–≤–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ –≥–∏–ª—å–¥–∏—é, –ø–æ—ç—Ç–æ–º—É –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–∞—à—É –∑–∞—è–≤–∫—É!`,
                    ephemeral: true
                })
                appData.status = `–û—Ç–∫–ª–æ–Ω–µ–Ω–∞`
                appData.save()
                const appCh = await interaction.guild.channels.fetch(ch_list.apply)
                const appMsg = await appCh.messages.fetch(appData.applicationid)
                await appMsg.delete()
                await interaction.reply({
                    content: `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞! –ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø–∏—à–∏—Ç–µ \`/application create\`!`,
                    ephemeral: true
                })

            }

                break;
            case `setstatus`: {
                if (!interaction.member.roles.cache.has(`320880176416161802`)) {
                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                        })
                        .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(`320880176416161802`).name}\`! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏!`)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setColor(`DarkRed`)
                        .setTimestamp(Date.now())

                    return interaction.reply({
                        embeds: [embed],
                        ephemeral: true
                    })
                }
                const member = interaction.options.getMember(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                const status = interaction.options.getString(`—Å—Ç–∞—Ç—É—Å`)
                const guild = interaction.guild
                let appData = await Apply.findOne({ userid: member.user.id, guildid: guild.id })
                if (!appData) return interaction.reply({
                    content: `–ó–∞—è–≤–∫–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`,
                    ephemeral: true
                })
                const appCh = await interaction.guild.channels.fetch(ch_list.apply)
                const appMsg = await appCh.messages.fetch(appData.applicationid)
                if (status == `‚úÖ`) {
                    await appMsg.reactions.removeAll()
                    appData.status = `–ü—Ä–∏–Ω—è—Ç–∞`
                    await appMsg.react(`‚úÖ`)
                    await interaction.reply({
                        content: `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –Ω–∞ –∑–∞—è–≤–∫—É ${member} - \`–ü—Ä–∏–Ω—è—Ç–∞\``,
                        ephemeral: true
                    })
                } else if (status == `üïí`) {
                    await appMsg.reactions.removeAll()
                    appData.status = `–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏`
                    await appMsg.react(`üïí`)
                    await interaction.reply({
                        content: `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –Ω–∞ –∑–∞—è–≤–∫—É ${member} - \`–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏\``,
                        ephemeral: true
                    })
                } else if (status == `‚ùå`) {
                    await appMsg.reactions.removeAll()
                    appData.status = `–û—Ç–∫–ª–æ–Ω–µ–Ω–∞`
                    await appMsg.react(`‚ùå`)
                    await interaction.reply({
                        content: `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –Ω–∞ –∑–∞—è–≤–∫—É ${member} - \`–û—Ç–∫–ª–æ–Ω–µ–Ω–∞\``,
                        ephemeral: true
                    })
                }
                appData.save()

            }

                break;
            case `status`: {
                const member = interaction.member
                const guild = interaction.guild
                if (member.roles.cache.has(`504887113649750016`)) {
                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: `‚ùó –í—ã —É–∂–µ –≤ –≥–∏–ª—å–¥–∏–∏!`
                        })
                        .setDescription(`–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥–∏–ª—å–¥–∏–∏ Starpixel! –ó–∞—á–µ–º –≤–∞–º —Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏? –û—Ç–≤–µ—Ç –æ—á–µ–≤–∏–¥–µ–Ω! üòÇ`)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setColor(`DarkRed`)
                        .setTimestamp(Date.now())

                    return interaction.reply({
                        embeds: [embed],
                        ephemeral: true
                    })
                }
                let appData = await Apply.findOne({ userid: member.user.id, guildid: guild.id })
                if (!appData) return interaction.reply({
                    content: `–í—ã –Ω–µ –ø–æ–¥–∞–≤–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ –≥–∏–ª—å–¥–∏—é, –ø–æ—ç—Ç–æ–º—É –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–∞—à—É –∑–∞—è–≤–∫—É!`,
                    ephemeral: true
                })

                await interaction.reply({
                    content: `–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–∏–ª—å–¥–∏—é: \`${appData.status}\`!`,
                    ephemeral: true
                })
            }
                break;
            default:
                break;
        }

    }
};