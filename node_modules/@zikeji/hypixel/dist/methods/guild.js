"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Guild = void 0;
const Method_1 = require("../util/Method");
const ResultObject_1 = require("../util/ResultObject");
class Guild extends Method_1.Method {
    /**
     * Returns the guild by the requested ID if found.
     * @example
     * ```typescript
     * const guild = await client.guild.id("553490650cf26f12ae5bac8f");
     * ```
     * @category API
     */
    id(id) {
        return __awaiter(this, void 0, void 0, function* () {
            return ResultObject_1.getResultObject(yield this.client.call("guild", {
                id,
            }), ["guild"]);
        });
    }
    /**
     * Returns the guild by the requested player's UUID if found.
     * @example
     * ```typescript
     * const guild = await client.guild.player("20934ef9488c465180a78f861586b4cf");
     * ```
     * @category API
     */
    player(player) {
        return __awaiter(this, void 0, void 0, function* () {
            return ResultObject_1.getResultObject(yield this.client.call("guild", {
                player,
            }), ["guild"]);
        });
    }
    /**
     * Returns the guild by the requested guild name if found.
     * @example
     * ```typescript
     * const guild = await client.guild.name("Mini Squid");
     * ```
     * @category API
     */
    name(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return ResultObject_1.getResultObject(yield this.client.call("guild", {
                name,
            }), ["guild"]);
        });
    }
}
exports.Guild = Guild;
//# sourceMappingURL=guild.js.map