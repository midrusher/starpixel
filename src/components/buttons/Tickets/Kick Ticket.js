const { ButtonBuilder, ChannelType, PermissionsBitField, EmbedBuilder, ActionRowBuilder, ButtonStyle } = require("discord.js");
const { Tickets } = require(`../../../schemas/tickets`)
const { TicketsUser } = require(`../../../schemas/ticketUser`)
const linksInfo = require(`../../../discord structure/links.json`)

module.exports = {
    data: {
        name: `kick_ticket`
    },
    async execute(interaction, client) {
        const { Guild } = require(`../../../schemas/guilddata`)
        const pluginData = await Guild.findOne({ id: interaction.guild.id })
        if (pluginData.plugins.tickets === false) return interaction.reply({content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true})
        const guild = interaction.guild
        const user = interaction.user
        const tickets = await Tickets.findOne({ guildid: guild.id }) || new Tickets({ guildid: guild.id, support: `320880176416161802` })
        const anyTickets = await TicketsUser.findOne({ userid: user.id, guildid: guild.id })
        if (anyTickets) return interaction.reply({
            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª <#${anyTickets.channelid}>`,
            ephemeral: true
        })
        tickets.id += 1
        const support = await guild.channels.create({
            name: `–æ–±—Ä–∞—â–µ–Ω–∏–µ-‚Ññ${tickets.id}`,
            type: ChannelType.GuildText,
            parent: interaction.channel.parentId,
            topic: `–û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ‚Ññ${tickets.id}.
 **–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è**: –û–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –≥–∏–ª—å–¥–∏–∏.`,
            permissionOverwrites: [
                {
                    id: guild.id,
                    deny: [PermissionsBitField.Flags.ViewChannel]
                },
                {
                    id: user.id,
                    allow: [
                        PermissionsBitField.Flags.ViewChannel,
                        PermissionsBitField.Flags.SendMessages,
                        PermissionsBitField.Flags.AttachFiles,
                        PermissionsBitField.Flags.EmbedLinks,
                        PermissionsBitField.Flags.ReadMessageHistory

                    ]
                },
                {
                    id: tickets.support,
                    allow: [
                        PermissionsBitField.Flags.ViewChannel,
                        PermissionsBitField.Flags.SendMessages,
                        PermissionsBitField.Flags.AttachFiles,
                        PermissionsBitField.Flags.EmbedLinks,
                        PermissionsBitField.Flags.ReadMessageHistory
                    ]
                }
            ],

        })
        const ticketuser = new TicketsUser({ userid: user.id, guildid: guild.id, channelid: support.id, categoryid: support.parentId, opened: true });

        const delete_button = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`delete_ticket`)
                    .setEmoji(`üîí`)
                    .setLabel(`–ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ`)
                    .setStyle(ButtonStyle.Danger)
            )

        const delete_embed = new EmbedBuilder()
            .setTitle(`–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!`)
            .setColor(linksInfo.bot_color)
            .setDescription(`–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ "–û–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –≥–∏–ª—å–¥–∏–∏". –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –Ω–∞ Hypixel, –ø—Ä–∏—á–∏–Ω—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤–∞—Å –∏—Å–∫–ª—é—á–∏–ª–∏, –∞ —Ç–∞–∫–∂–µ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å: "–ü–æ—á–µ–º—É –º—ã –¥–æ–ª–∂–Ω—ã –≤–∞—Å –≤–µ—Ä–Ω—É—Ç—å –≤ –≥–∏–ª—å–¥–∏—é?".
        
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –¥–∞–Ω–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ. –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è —É–¥–∞–ª—è—é—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º —Å–ø—É—Å—Ç—è 2 –¥–Ω—è.`)
            .setThumbnail(user.displayAvatarURL())
            .setTimestamp(Date.now())
        await interaction.reply({
            content: `–í—ã –æ—Ç–∫—Ä—ã–ª–∏ <#${support.id}>! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!`,
            ephemeral: true
        })
        await support.send({
            embeds: [delete_embed],
            components: [delete_button]
        })
        tickets.save()
        ticketuser.save()
    }
}
