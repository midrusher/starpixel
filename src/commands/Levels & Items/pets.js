const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { execute } = require('../../events/client/start_bot/ready');
const fetch = require(`node-fetch`);
const api = process.env.hypixel_apikey;
const { User } = require(`../../schemas/userdata`)
const chalk = require(`chalk`);
const prettyMilliseconds = require(`pretty-ms`); //–î–û–ë–ê–í–ò–¢–¨ –í –î–†–£–ì–ò–ï
const ch_list = require(`../../discord structure/channels.json`)

module.exports = {
    data: new SlashCommandBuilder()
        .setName(`pets`)
        .setDescription(`–ü–∏—Ç–æ–º—Ü—ã –≥–∏–ª—å–¥–∏–∏ Starpixel`)
        .addSubcommand(subcommand => subcommand
            .setName(`spet`)
            .setDescription(`–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –∑–µ–º–ª–∏ –Ω–∞ –ø–æ–∏—Å–∫–∏`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`epet`)
            .setDescription(`–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –≤–æ–∑–¥—É—Ö–∞ –Ω–∞ –ø–æ–∏—Å–∫–∏`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`lpet`)
            .setDescription(`–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –≤–æ–¥—ã –Ω–∞ –ø–æ–∏—Å–∫–∏`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`mpet`)
            .setDescription(`–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –æ–≥–Ω—è –Ω–∞ –ø–æ–∏—Å–∫–∏`)
        ),

    async execute(interaction, client) {
        const user = interaction.member
        const userData = await User.findOne({ userid: user.id })
        let role = ``
        switch (interaction.options.getSubcommand()) {
            case `spet`: {
                role = `553637207911563264`
                const no_role = new EmbedBuilder()
                    .setAuthor({
                        name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                    })
                    .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(role).name}\`!`)
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setColor(`DarkRed`)
                    .setTimestamp(Date.now())
                if (!user.roles.cache.has(role)) return interaction.reply({
                    embeds: [no_role],
                    ephemeral: true
                })

                const cd = new EmbedBuilder()
                    .setColor(process.env.bot_color)
                    .setAuthor({
                        name: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É`
                    })
                    .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.spet - Date.now(), { verbose: true, secondsDecimalDigits: 0 })}!`)

                if (userData.cooldowns.spet > Date.now()) return interaction.reply({
                    embeds: [cd],
                    ephemeral: true
                })

                await interaction.deferReply({
                    fetchReply: true
                })
                await interaction.deleteReply()

                try {
                    let pet = [
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–æ—Ä–Ω—ã—Ö –ø–æ—Ä–æ–¥\`. üå≥"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π\`. üå≥"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ–¥ –∑–µ–º–ª—ë–π\`. üå≥"
                        },
                        {
                            dropChance: 45,
                            name: "–û–Ω –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞."
                        },


                    ]

                    let sum_act = 0;
                    for (let i_act = 0; i_act < pet.length; i_act++) {
                        sum_act += pet[i_act].dropChance;
                    }
                    let r_act = Math.floor(Math.random() * sum_act);
                    let i_act = 0;
                    for (let s = pet[0].dropChance; s <= r_act; s += pet[i_act].dropChance) {
                        i_act++;
                    }

                    interaction.guild.channels.cache.get(ch_list.elem).send(
                        `:black_medium_small_square:
${user} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∫ –ü–∏—Ç–æ–º—Ü—É –ó–µ–º–ª–∏ üêõ.
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
${pet[i_act].name}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
:black_medium_small_square:`
                    );
                    if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–æ—Ä–Ω—ã—Ö –ø–æ—Ä–æ–¥\`. üå≥` && userData.elements.mountains < 1) {
                        userData.elements.mountains += 1
                        userData.cooldowns.spet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π\`. üå≥` && userData.elements.fast_grow < 1) {
                        userData.elements.fast_grow += 1
                        userData.cooldowns.spet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ–¥ –∑–µ–º–ª—ë–π\`. üå≥` && userData.elements.underground < 1) {
                        userData.elements.underground += 1
                        userData.cooldowns.spet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    } else {
                        userData.cooldowns.spet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    }
                } catch (error) {
                    console.log(chalk.red(`[–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                }


            }

                break;
            case `epet`: {
                role = `553638054238093364`
                const no_role = new EmbedBuilder()
                    .setAuthor({
                        name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                    })
                    .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(role).name}\`!`)
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setColor(`DarkRed`)
                    .setTimestamp(Date.now())
                if (!user.roles.cache.has(role)) return interaction.reply({
                    embeds: [no_role],
                    ephemeral: true
                })

                const cd = new EmbedBuilder()
                    .setColor(process.env.bot_color)
                    .setAuthor({
                        name: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É`
                    })
                    .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.epet - Date.now(), { verbose: true, secondsDecimalDigits: 0 })}!`)

                if (userData.cooldowns.epet > Date.now()) return interaction.reply({
                    embeds: [cd],
                    ephemeral: true
                })

                await interaction.deferReply({
                    fetchReply: true
                })
                await interaction.deleteReply()

                try {
                    let pet = [
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–æ–ª—ë—Ç –≤ –Ω–µ–±–µ—Å–∞—Ö\`. üå™Ô∏è"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–æ–≤–µ–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–æ–º\`. üå™Ô∏è"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–û—Ä–ª–∏–Ω—ã–π –≥–ª–∞–∑\`. üå™Ô∏è"
                        },
                        {
                            dropChance: 45,
                            name: "–û–Ω –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞."
                        },


                    ]

                    let sum_act = 0;
                    for (let i_act = 0; i_act < pet.length; i_act++) {
                        sum_act += pet[i_act].dropChance;
                    }
                    let r_act = Math.floor(Math.random() * sum_act);
                    let i_act = 0;
                    for (let s = pet[0].dropChance; s <= r_act; s += pet[i_act].dropChance) {
                        i_act++;
                    }

                    interaction.guild.channels.cache.get(ch_list.elem).send(
                        `:black_medium_small_square:
${user} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∫ –ü–∏—Ç–æ–º—Ü—É –í–æ–∑–¥—É—Ö–∞ üïäÔ∏è.
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
${pet[i_act].name}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
:black_medium_small_square:`
                    );
                    if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–æ–ª—ë—Ç –≤ –Ω–µ–±–µ—Å–∞—Ö\`. üå™Ô∏è` && userData.elements.flying < 1) {
                        userData.elements.flying += 1
                        userData.cooldowns.epet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–æ–≤–µ–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–æ–º\`. üå™Ô∏è` && userData.elements.wind < 1) {
                        userData.elements.wind += 1
                        userData.cooldowns.epet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–û—Ä–ª–∏–Ω—ã–π –≥–ª–∞–∑\`. üå™Ô∏è` && userData.elements.eagle_eye < 1) {
                        userData.elements.eagle_eye += 1
                        userData.cooldowns.epet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else {
                        userData.cooldowns.epet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    }

                } catch (error) {
                    console.log(chalk.red(`[–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                }


            }

                break;
            case `lpet`: {
                role = `553638061817200650`
                const no_role = new EmbedBuilder()
                    .setAuthor({
                        name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                    })
                    .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(role).name}\`!`)
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setColor(`DarkRed`)
                    .setTimestamp(Date.now())
                if (!user.roles.cache.has(role)) return interaction.reply({
                    embeds: [no_role],
                    ephemeral: true
                })
                const cd = new EmbedBuilder()
                    .setColor(process.env.bot_color)
                    .setAuthor({
                        name: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É`
                    })
                    .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.lpet - Date.now(), { verbose: true, secondsDecimalDigits: 0 })}!`)

                if (userData.cooldowns.lpet > Date.now()) return interaction.reply({
                    embeds: [cd],
                    ephemeral: true
                })
                await interaction.deferReply({
                    fetchReply: true
                })
                await interaction.deleteReply()

                try {
                    let pet = [
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –≥–ª—É–±–∏–Ω–µ\`. üåä"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Ç–µ—á–µ–Ω–∏—è–º\`. üåä"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–æ–¥–≤–æ–¥–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ\`. üåä"
                        },
                        {
                            dropChance: 45,
                            name: "–û–Ω –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞."
                        },


                    ]

                    let sum_act = 0;
                    for (let i_act = 0; i_act < pet.length; i_act++) {
                        sum_act += pet[i_act].dropChance;
                    }
                    let r_act = Math.floor(Math.random() * sum_act);
                    let i_act = 0;
                    for (let s = pet[0].dropChance; s <= r_act; s += pet[i_act].dropChance) {
                        i_act++;
                    }

                    interaction.guild.channels.cache.get(ch_list.elem).send(
                        `:black_medium_small_square:
${user} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∫ –ü–∏—Ç–æ–º—Ü—É –í–æ–¥—ã üêã.
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
${pet[i_act].name}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
:black_medium_small_square:`
                    );
                    if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –≥–ª—É–±–∏–Ω–µ\`. üåä` && userData.elements.diving < 1) {
                        userData.elements.diving += 1
                        userData.cooldowns.lpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Ç–µ—á–µ–Ω–∏—è–º\`. üåä` && userData.elements.resistance < 1) {
                        userData.elements.resistance += 1
                        userData.cooldowns.lpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ü–æ–¥–≤–æ–¥–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ\`. üåä` && userData.elements.respiration < 1) {
                        userData.elements.respiration += 1
                        userData.cooldowns.lpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else {
                        userData.cooldowns.lpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    }

                } catch (error) {
                    console.log(chalk.red(`[–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                }


            }

                break;
            case `mpet`: {
                role = `605696079819964426`
                const no_role = new EmbedBuilder()
                    .setAuthor({
                        name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                    })
                    .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(role).name}\`!`)
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setColor(`DarkRed`)
                    .setTimestamp(Date.now())
                if (!user.roles.cache.has(role)) return interaction.reply({
                    embeds: [no_role],
                    ephemeral: true
                })
                const cd = new EmbedBuilder()
                    .setColor(process.env.bot_color)
                    .setAuthor({
                        name: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É`
                    })
                    .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.mpet - Date.now(), { verbose: true, secondsDecimalDigits: 0 })}!`)

                if (userData.cooldowns.mpet > Date.now()) return interaction.reply({
                    embeds: [cd],
                    ephemeral: true
                })
                await interaction.deferReply({
                    fetchReply: true
                })
                await interaction.deleteReply()

                try {
                    let pet = [
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ó–∞—â–∏—Ç–∞ –æ—Ç –æ–≥–Ω—è\`. üî•"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–£–¥–∞—Ä –º–æ–ª–Ω–∏–∏\`. üî•"
                        },
                        {
                            dropChance: 18,
                            name: "–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–º–µ–Ω–µ–º\`. üî•"
                        },
                        {
                            dropChance: 45,
                            name: "–û–Ω –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞."
                        },


                    ]

                    let sum_act = 0;
                    for (let i_act = 0; i_act < pet.length; i_act++) {
                        sum_act += pet[i_act].dropChance;
                    }
                    let r_act = Math.floor(Math.random() * sum_act);
                    let i_act = 0;
                    for (let s = pet[0].dropChance; s <= r_act; s += pet[i_act].dropChance) {
                        i_act++;
                    }

                    interaction.guild.channels.cache.get(ch_list.elem).send(
                        `:black_medium_small_square:
${user} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∫ –ü–∏—Ç–æ–º—Ü—É –û–≥–Ω—è üê≤.
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
${pet[i_act].name}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
:black_medium_small_square:`
                    );
                    if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–ó–∞—â–∏—Ç–∞ –æ—Ç –æ–≥–Ω—è\`. üî•` && userData.elements.fire_resistance < 1) {
                        userData.elements.fire_resistance += 1
                        userData.cooldowns.mpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–£–¥–∞—Ä –º–æ–ª–Ω–∏–∏\`. üî•` && userData.elements.lightning < 1) {
                        userData.elements.lightning += 1
                        userData.cooldowns.mpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else if (pet[i_act].name == `–û–Ω –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–∫ –Ω–∞–≤—ã–∫–∞ \`–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–º–µ–Ω–µ–º\`. üî•` && userData.elements.flame < 1) {
                        userData.elements.flame += 1
                        userData.cooldowns.mpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))

                    } else {
                        userData.cooldowns.mpet = Date.now() + (1000 * 60 * 60 * 24 * 4)
                        userData.save()
                        console.log(chalk.magenta(`[–ü–æ–ª—É—á–µ–Ω –Ω–∞–≤—ã–∫ –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                    }

                } catch (error) {
                    console.log(chalk.red(`[–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞–≤—ã–∫–æ–≤]`) + chalk.white(`: ${user.user.username} –ø—Ä–µ–≤—ã—Å–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≤—ã–∫–∞ ${pet[i_act].name}`))
                }


            }

                break;

            default:
                break;
        }

    }
};