const { Birthday } = require(`../../schemas/birthday`)
const { Temp } = require(`../../schemas/temp_items`)
const { User } = require(`../../schemas/userdata`)
const { Guild } = require(`../../schemas/guilddata`)
const chalk = require(`chalk`)
const fetch = require(`node-fetch`)
const cron = require(`node-cron`)
const prettyMilliseconds = require(`pretty-ms`)
const ch_list = require(`../../discord structure/channels.json`)
const { EmbedBuilder, SlashCommandBuilder } = require("discord.js")
const { execute } = require('../../events/client/start_bot/ready');
const { achievementStats, found } = require(`../../functions`)

module.exports = {
    data: new SlashCommandBuilder()
        .setName(`seasonal`)
        .setDescription(`–ö–æ–º–∞–Ω–¥—ã —Å–µ–∑–æ–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π`)
        .addSubcommandGroup(gr => gr
            .setName(`halloween`)
            .setDescription(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è`)
            .addSubcommand(sb => sb
                .setName(`achievement`)
                .setDescription(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`)
                .addStringOption(o => o
                    .setName(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)
                    .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å`)
                    .setRequired(true)
                    .setChoices(
                        {
                            name: `‚Ññ1. –ü—Ä–∏–∑—Ä–∞–∫–∏`,
                            value: `‚Ññ1. –ü—Ä–∏–∑—Ä–∞–∫–∏`
                        },
                        {
                            name: `‚Ññ2. –ü–æ–ª—Ç–∏–Ω–Ω–∏–∫`,
                            value: `‚Ññ2. –ü–æ–ª—Ç–∏–Ω–Ω–∏–∫`
                        },
                        {
                            name: `‚Ññ3. –•—ç–ª–ª–æ—É–∏–Ω`,
                            value: `‚Ññ3. –•—ç–ª–ª–æ—É–∏–Ω`
                        },
                        {
                            name: `‚Ññ4. –ñ—É—Ç—å`,
                            value: `‚Ññ4. –ñ—É—Ç—å`
                        },
                        {
                            name: `‚Ññ5. –î—É—à–∞`,
                            value: `‚Ññ5. –î—É—à–∞`
                        },
                        {
                            name: `‚Ññ6. –ó–∞–¥–∞–Ω–∏—è`,
                            value: `‚Ññ6. –ó–∞–¥–∞–Ω–∏—è`
                        }
                    )
                )
            )
            .addSubcommand(sb => sb
                .setName(`stats`)
                .setDescription(`–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É`)
                .addUserOption(o => o
                    .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                    .setDescription(`–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`))
            )
            .addSubcommand(sb => sb
                .setName(`leaderboards`)
                .setDescription(`–õ—É—á—à–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ –ø–µ—Ä–∏–æ–¥ –•—ç–ª–ª–æ—É–∏–Ω–∞`)
            )
            .addSubcommand(sb => sb
                .setName(`quest`)
                .setDescription(`–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç`)
                .addStringOption(o => o
                    .setName(`–¥–µ–π—Å—Ç–≤–∏–µ`)
                    .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –∫–≤–µ—Å—Ç–æ–º`)
                    .addChoices(
                        {
                            name: `–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç`,
                            value: `start`
                        },
                        {
                            name: `–ó–∞–∫–æ–Ω—á–∏—Ç—å –∫–≤–µ—Å—Ç`,
                            value: `finish`
                        },

                    )
                    .setRequired(true)
                )
            )
            .addSubcommand(sb => sb
                .setName(`buy`)
                .setDescription(`–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π —Ç–æ–≤–∞—Ä`)
                .addStringOption(o => o
                    .setName(`—Ç–æ–≤–∞—Ä`)
                    .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏`)
                    .setRequired(true)
                    .setChoices(
                        {
                            name: `–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ üé±`,
                            value: `üé±`
                        },
                        {
                            name: `–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ üëπ`,
                            value: `üëπ`
                        },
                        {
                            name: `–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ ü©∏`,
                            value: `ü©∏`
                        },
                        {
                            name: `–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ üß•`,
                            value: `üß•`
                        },
                        {
                            name: `–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ üíÄ`,
                            value: `üíÄ`
                        },
                        {
                            name: `–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ üßõ‚Äç‚ôÄÔ∏è`,
                            value: `üßõ‚Äç‚ôÄÔ∏è`
                        },
                    ))
            )
        ),
    async execute(interaction, client) {
        const guildData = await Guild.findOne({ id: interaction.guild.id })
        if (guildData.plugins.seasonal === false) return interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
        const member = interaction.member

        switch (interaction.options.getSubcommandGroup()) {
            case `halloween`: {
                if (guildData.seasonal.halloween.enabled === false) return interaction.reply({
                    content: `–°–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è –¥–ª—è –•—ç–ª–ª–æ—É–∏–Ω–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ø–µ—Ä–∏–æ–¥ **7 –æ–∫—Ç—è–±—Ä—è –ø–æ 7 –Ω–æ—è–±—Ä—è**!`,
                    ephemeral: true
                })

                switch (interaction.options.getSubcommand()) {
                    case `achievement`: {
                        const userData = await User.findOne({ userid: interaction.user.id, guildid: interaction.guild.id })
                        const achievement = interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)
                        switch (achievement) {
                            case `‚Ññ1. –ü—Ä–∏–∑—Ä–∞–∫–∏`: {
                                const already_done = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


                                if (userData.seasonal.halloween.achievements.num1 === true) return interaction.reply({
                                    embeds: [already_done],
                                    ephemeral: true
                                })

                                const no_condition = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.hw_achs}>.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())

                                if (!member.roles.cache.has(`893927886766096384`)) return interaction.reply({
                                    embeds: [no_condition],
                                    ephemeral: true
                                })
                                let reward = `893932177799135253`
                                const has_reward = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –∏–º–µ–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!`
                                    })
                                    .setDescription(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ <@&${reward}>, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())
                                if (member.roles.cache.has(reward)) return interaction.reply({
                                    embeds: [has_reward],
                                    ephemeral: true
                                })
                                userData.seasonal.halloween.achievements.num1 = true
                                await member.roles.add(reward)
                                userData.rank += 50
                                userData.exp += 300;
                                userData.seasonal.halloween.points += 5
                                userData.save()
                                const condition_meet = new EmbedBuilder()
                                    .setColor(process.env.bot_color)
                                    .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                                    .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#1029662737497866300>

–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/seasonal halloween stats\`!`)


                                await interaction.guild.channels.cache.get(ch_list.act).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

                                await interaction.guild.channels.cache.get(ch_list.rank).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
                                await interaction.reply({
                                    embeds: [condition_meet]
                                })
                                console.log(chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}!`)))


                            }
                                break;
                            case `‚Ññ2. –ü–æ–ª—Ç–∏–Ω–Ω–∏–∫`: {
                                const already_done = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


                                if (userData.seasonal.halloween.achievements.num2 === true) return interaction.reply({
                                    embeds: [already_done],
                                    ephemeral: true
                                })

                                const no_condition = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.hw_achs}>.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())

                                if (userData.seasonal.halloween.points < 50) return interaction.reply({
                                    embeds: [no_condition],
                                    ephemeral: true
                                })
                                let reward = `893932177799135253`
                                const has_reward = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –∏–º–µ–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!`
                                    })
                                    .setDescription(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ <@&${reward}>, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())
                                if (member.roles.cache.has(reward)) return interaction.reply({
                                    embeds: [has_reward],
                                    ephemeral: true
                                })
                                userData.seasonal.halloween.achievements.num2 = true
                                await member.roles.add(reward)
                                userData.rank += 50
                                userData.exp += 300;
                                userData.seasonal.halloween.points += 5
                                userData.save()
                                const condition_meet = new EmbedBuilder()
                                    .setColor(process.env.bot_color)
                                    .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                                    .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#1029662737497866300>

–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/seasonal halloween stats\`!`)


                                await interaction.guild.channels.cache.get(ch_list.act).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

                                await interaction.guild.channels.cache.get(ch_list.rank).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
                                await interaction.reply({
                                    embeds: [condition_meet]
                                })
                                console.log(chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}!`)))
                            }
                                break;
                            case `‚Ññ3. –•—ç–ª–ª–æ—É–∏–Ω`: {
                                const already_done = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


                                if (userData.seasonal.halloween.achievements.num3 === true) return interaction.reply({
                                    embeds: [already_done],
                                    ephemeral: true
                                })
                                const date = new Date()
                                const day = date.getDate()
                                const month = date.getMonth() + 1


                                const no_condition = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.hw_achs}>.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())

                                if (day !== 31 || month !== 10 || userData.seasonal.halloween.hw_msg !== true) return interaction.reply({
                                    embeds: [no_condition],
                                    ephemeral: true
                                })
                                let reward = `893932177799135253`
                                const has_reward = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –∏–º–µ–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!`
                                    })
                                    .setDescription(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ <@&${reward}>, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())
                                if (member.roles.cache.has(reward)) return interaction.reply({
                                    embeds: [has_reward],
                                    ephemeral: true
                                })
                                userData.seasonal.halloween.achievements.num3 = true
                                await member.roles.add(reward)
                                userData.rank += 50
                                userData.exp += 300;
                                userData.seasonal.halloween.points += 5
                                userData.save()
                                const condition_meet = new EmbedBuilder()
                                    .setColor(process.env.bot_color)
                                    .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                                    .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#1029662737497866300>

–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/seasonal halloween stats\`!`)


                                await interaction.guild.channels.cache.get(ch_list.act).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

                                await interaction.guild.channels.cache.get(ch_list.rank).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
                                await interaction.reply({
                                    embeds: [condition_meet]
                                })
                                console.log(chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}!`)))
                            }
                                break;
                            case `‚Ññ4. –ñ—É—Ç—å`: {
                                const already_done = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


                                if (userData.seasonal.halloween.achievements.num4 === true) return interaction.reply({
                                    embeds: [already_done],
                                    ephemeral: true
                                })

                                const no_condition = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.hw_achs}>.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())

                                if (userData.seasonal.halloween.hw_cosm == false) return interaction.reply({
                                    embeds: [no_condition],
                                    ephemeral: true
                                })
                                let reward = `893932177799135253`
                                const has_reward = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –∏–º–µ–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!`
                                    })
                                    .setDescription(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ <@&${reward}>, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())
                                if (member.roles.cache.has(reward)) return interaction.reply({
                                    embeds: [has_reward],
                                    ephemeral: true
                                })
                                userData.seasonal.halloween.achievements.num4 = true
                                await member.roles.add(reward)
                                userData.rank += 50
                                userData.exp += 300;
                                userData.seasonal.halloween.points += 5
                                userData.save()
                                const condition_meet = new EmbedBuilder()
                                    .setColor(process.env.bot_color)
                                    .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                                    .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#1029662737497866300>

–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/seasonal halloween stats\`!`)


                                await interaction.guild.channels.cache.get(ch_list.act).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

                                await interaction.guild.channels.cache.get(ch_list.rank).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
                                await interaction.reply({
                                    embeds: [condition_meet]
                                })
                                console.log(chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}!`)))
                            }
                                break;
                            case `‚Ññ5. –î—É—à–∞`: {
                                const already_done = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


                                if (userData.seasonal.halloween.achievements.num5 === true) return interaction.reply({
                                    embeds: [already_done],
                                    ephemeral: true
                                })

                                const no_condition = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.hw_achs}>.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())

                                if (userData.seasonal.halloween.hw_soul == false) return interaction.reply({
                                    embeds: [no_condition],
                                    ephemeral: true
                                })
                                let reward = `893932177799135253`
                                const has_reward = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –∏–º–µ–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!`
                                    })
                                    .setDescription(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ <@&${reward}>, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.

–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())
                                if (member.roles.cache.has(reward)) return interaction.reply({
                                    embeds: [has_reward],
                                    ephemeral: true
                                })
                                userData.seasonal.halloween.achievements.num5 = true
                                await member.roles.add(reward)
                                userData.rank += 50
                                userData.exp += 300;
                                userData.seasonal.halloween.points += 5
                                userData.save()
                                const condition_meet = new EmbedBuilder()
                                    .setColor(process.env.bot_color)
                                    .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                                    .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#1029662737497866300>

–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/seasonal halloween stats\`!`)


                                await interaction.guild.channels.cache.get(ch_list.act).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

                                await interaction.guild.channels.cache.get(ch_list.rank).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
                                await interaction.reply({
                                    embeds: [condition_meet]
                                })
                                console.log(chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}!`)))
                            }
                                break;
                            case `‚Ññ6. –ó–∞–¥–∞–Ω–∏—è`: {
                                const already_done = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


                                if (userData.seasonal.halloween.achievements.num6 === true) return interaction.reply({
                                    embeds: [already_done],
                                    ephemeral: true
                                })

                                const no_condition = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                                    })
                                    .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.hw_achs}>.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())

                                if (userData.seasonal.halloween.quests_completed < 6) return interaction.reply({
                                    embeds: [no_condition],
                                    ephemeral: true
                                })
                                let reward = `893932177799135253`
                                const has_reward = new EmbedBuilder()
                                    .setColor(`DarkRed`)
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setAuthor({
                                        name: `‚ùó –í—ã –∏–º–µ–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!`
                                    })
                                    .setDescription(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ <@&${reward}>, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                                    .setTimestamp(Date.now())
                                if (member.roles.cache.has(reward)) return interaction.reply({
                                    embeds: [has_reward],
                                    ephemeral: true
                                })
                                userData.seasonal.halloween.achievements.num6 = true
                                await member.roles.add(reward)
                                userData.rank += 50
                                userData.exp += 300;
                                userData.seasonal.halloween.points += 5
                                userData.save()
                                const condition_meet = new EmbedBuilder()
                                    .setColor(process.env.bot_color)
                                    .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                                    .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#1029662737497866300>
    
–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/seasonal halloween stats\`!`)


                                await interaction.guild.channels.cache.get(ch_list.act).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

                                await interaction.guild.channels.cache.get(ch_list.rank).send(
                                    `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
                                await interaction.reply({
                                    embeds: [condition_meet]
                                })
                                console.log(chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${interaction.options.getString(`–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`)}!`)))
                            }
                                break;

                            default:
                                break;
                        }
                    }
                        break;
                    case `stats`: {
                        const user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`) || interaction.user
                        if (user.bot) return interaction.reply({
                            content: `${user} —è–≤–ª—è–µ—Ç—Å—è –±–æ—Ç–æ–º, –∞ –∑–Ω–∞—á–∏—Ç –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–µ –æ—á–∫–∏ :'(`
                        })
                        const users = await User.find().then(users => {
                            return users.filter(async user => await interaction.guild.members.fetch(user.userid))
                        })
                        const sorts = users.sort((a, b) => {
                            return b.seasonal.halloween.points - a.seasonal.halloween.points
                        })
                        var i = 0
                        while (sorts[i].userid !== user.id) {
                            i++
                        }
                        const userData = await User.findOne({ userid: user.id, guildid: interaction.guild.id })
                        let rank = i + 1
                        const embed = new EmbedBuilder()
                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.username}`)
                            .setDescription(`**–ü–æ–∑–∏—Ü–∏—è –≤ —Ç–æ–ø–µ**: ${rank}
**–û—á–∫–æ–≤**: ${userData.seasonal.halloween.points}
**–û—Ç–∫—Ä—ã—Ç–æ –∂—É—Ç–∫–∏—Ö –∫–æ—Ä–æ–±–æ–∫**: ${userData.seasonal.halloween.opened_scary}
**–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∞—è –¥—É—à–∞**: ${found(userData.seasonal.halloween.hw_soul)}
**–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–≤–µ—Å—Ç–æ–≤**: ${userData.seasonal.halloween.quests_completed}

**–î–û–°–¢–ò–ñ–ï–ù–ò–Ø**
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ1**: ${achievementStats(userData.seasonal.halloween.achievements.num1)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ2**: ${achievementStats(userData.seasonal.halloween.achievements.num2)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ3**: ${achievementStats(userData.seasonal.halloween.achievements.num3)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ4**: ${achievementStats(userData.seasonal.halloween.achievements.num4)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ5**: ${achievementStats(userData.seasonal.halloween.achievements.num5)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ6**: ${achievementStats(userData.seasonal.halloween.achievements.num6)}

**–¢–ï–ö–£–©–ò–ô –ö–í–ï–°–¢**
**–£—Å–ª–æ–≤–∏–µ**: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –∫–æ–Ω–µ—Ü –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
**–°—Ç–∞—Ç—É—Å**: \`${userData.seasonal.halloween.quest.finished ? `–ó–∞–≤–µ—Ä—à–µ–Ω–æ` : `–ù–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ`}\``)
                            .setThumbnail(user.displayAvatarURL())
                            .setColor(process.env.bot_color)
                            .setTimestamp(Date.now())

                        await interaction.reply({
                            embeds: [embed]
                        })
                    }
                        break;
                    case `leaderboards`: {
                        await interaction.deferReply({
                            fetchReply: true
                        })
                        const users = await User.find({
                            "seasonal.halloween.points": { $gt: 0 }
                        }).then(users => {
                            return users.filter(async user => await interaction.guild.members.fetch(user.userid))
                        })
                        const sort = users.sort((a, b) => {
                            return b.seasonal.halloween.points - a.seasonal.halloween.points
                        }).slice(0, 10)
                        let index = 1
                        const map = sort.map(async (user) => {
                            const tag = await interaction.guild.members.fetch(user.userid)
                            return `**${index++}.** ${tag}: ${user.seasonal.halloween.points} –æ—á–∫–æ–≤`
                        })
                        const mapProm = await Promise.all(map)


                        const embed = new EmbedBuilder()
                            .setColor(process.env.bot_color)
                            .setAuthor({
                                name: `–õ—É—á—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–º –æ—á–∫–∞–º`
                            })
                            .setTimestamp(Date.now())
                            .setDescription(`${mapProm.join('\n')}`)

                        await interaction.editReply({
                            embeds: [embed]
                        })
                    }
                        break;
                    case `buy`: {
                        const userData = await User.findOne({ userid: interaction.user.id, guildid: interaction.guild.id })
                        const symb = interaction.options.getString(`—Ç–æ–≤–∞—Ä`)
                        let price
                        if (symb == `üé±` || symb == `üëπ` || symb == `ü©∏`) {
                            price = 30
                        } else if (symb == `üß•`) {
                            price = 40
                        } else if (symb == `üíÄ` || symb == `üßõ‚Äç‚ôÄÔ∏è`) {
                            price = 50
                        }

                        if (userData.seasonal.halloween.points < price) return interaction.reply({
                            content: `–î–ª—è –ø–æ–∫—É–ø–∫–∏ \`${symb}\` –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º ${price} –æ—á–∫–æ–≤! –£ –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ${userData.seasonal.halloween.points} –æ—á–∫–æ–≤`
                        })
                        userData.seasonal.halloween.points -= price
                        userData.seasonal.halloween.hw_cosm = true
                        userData.displayname.symbol = symb
                        userData.save()
                        await interaction.reply({
                            content: `–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ \`${symb}\` –∑–∞ ${price} —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏—Ö –æ—á–∫–æ–≤! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–∞–Ω–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –Ω–∏–∫–Ω–µ–π–º–µ! –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–æ–ø—Ä–æ—Å-–º–æ–¥–µ—Ä–∞–º!`
                        })
                    }
                        break;
                    case `quest`: {
                        const userData = await User.findOne({ userid: interaction.user.id, guildid: interaction.guild.id })
                        if (!userData.uuid) return interaction.reply({
                            content: `–ü–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–µ —É–∫–∞–∑–∞–Ω –≤–∞—à –∏–≥—Ä–æ–≤–æ–π UUID. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É! –°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π –≥–∏–ª—å–¥–∏–∏.`,
                            ephemeral: true
                        })
                        const choice = interaction.options.getString(`–¥–µ–π—Å—Ç–≤–∏–µ`)
                        if (choice == `start`) {
                            if (userData.cooldowns.hw_quest > Date.now())
                                return interaction.reply({
                                    embeds: [
                                        new EmbedBuilder()
                                            .setColor(process.env.bot_color)
                                            .setAuthor({
                                                name: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É`
                                            })
                                            .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.hw_quest - Date.now(), { verbose: true, secondsDecimalDigits: 0 })}!`)
                                    ],
                                    ephemeral: true
                                });
                            let response = await fetch(`https://api.hypixel.net/player?key=${process.env.hypixel_apikey}&uuid=${userData.uuid}`)
                            if (response.ok) {

                                const quests = require(`./Seasonal Data/Halloween Quests.json`)
                                const r_quest = quests[Math.floor(Math.random() * quests.length)]
                                try {
                                    let json = await response.json()
                                    const hw = userData.seasonal.halloween
                                    const stats = json.player.stats
                                    if (r_quest.id == 1) {
                                        if (!stats?.MurderMystery?.wins_spooky_mansion) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.MurderMystery?.wins_spooky_mansion) {
                                            hw.quest.before = stats?.MurderMystery?.wins_spooky_mansion;
                                            hw.quest.requirement = stats?.MurderMystery?.wins_spooky_mansion + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 2) {
                                        if (!stats?.MurderMystery?.wins_darkfall) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.MurderMystery?.wins_darkfall) {
                                            hw.quest.before = stats?.MurderMystery?.wins_darkfall;
                                            hw.quest.requirement = stats?.MurderMystery?.wins_darkfall + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 3) {
                                        if (!stats?.MurderMystery["wins_widow's_den"]) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.MurderMystery["wins_widow's_den"]) {
                                            hw.quest.before = stats?.MurderMystery["wins_widow's_den"];
                                            hw.quest.requirement = stats?.MurderMystery["wins_widow's_den"] + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 4) {
                                        if (!stats?.VampireZ?.human_wins) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.VampireZ?.human_wins) {
                                            hw.quest.before = stats?.VampireZ?.human_wins;
                                            hw.quest.requirement = stats?.VampireZ?.human_wins + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 5) {
                                        if (!stats?.MurderMystery?.kills_as_murderer) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.MurderMystery?.kills_as_murderer) {
                                            hw.quest.before = stats?.MurderMystery?.kills_as_murderer;
                                            hw.quest.requirement = stats?.MurderMystery?.kills_as_murderer + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 6) {
                                        if (!stats?.Arcade?.wins_zombies_deadend) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.wins_zombies_deadend) {
                                            hw.quest.before = stats?.Arcade?.wins_zombies_deadend;
                                            hw.quest.requirement = stats?.Arcade?.wins_zombies_deadend + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 7) {
                                        if (!stats?.Arcade?.wins_zombies_badblood) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.wins_zombies_badblood) {
                                            hw.quest.before = stats?.Arcade?.wins_zombies_badblood;
                                            hw.quest.requirement = stats?.Arcade?.wins_zombies_badblood + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 8) {
                                        if (!stats?.Arcade?.wins_dayone) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.wins_dayone) {
                                            hw.quest.before = stats?.Arcade?.wins_dayone;
                                            hw.quest.requirement = stats?.Arcade?.wins_dayone + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 9) {
                                        if (!stats?.Arcade?.zombie_kills_zombies) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.zombie_kills_zombies) {
                                            hw.quest.before = stats?.Arcade?.zombie_kills_zombies;
                                            hw.quest.requirement = stats?.Arcade?.zombie_kills_zombies + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 10) {
                                        if (!stats?.Arcade?.zombie_kills_zombies_deadend) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.zombie_kills_zombies_deadend) {
                                            hw.quest.before = stats?.Arcade?.zombie_kills_zombies_deadend;
                                            hw.quest.requirement = stats?.Arcade?.zombie_kills_zombies_deadend + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 11) {
                                        if (!stats?.Arcade?.zombie_kills_zombies_badblood) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.zombie_kills_zombies_badblood) {
                                            hw.quest.before = stats?.Arcade?.zombie_kills_zombies_badblood;
                                            hw.quest.requirement = stats?.Arcade?.zombie_kills_zombies_badblood + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 12) {
                                        if (!stats?.MurderMystery?.kills_as_infected) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.MurderMystery?.kills_as_infected) {
                                            hw.quest.before = stats?.MurderMystery?.kills_as_infected;
                                            hw.quest.requirement = stats?.MurderMystery?.kills_as_infected + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 13) {
                                        if (!stats?.Arcade?.kills_dayone) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.kills_dayone) {
                                            hw.quest.before = stats?.Arcade?.kills_dayone;
                                            hw.quest.requirement = stats?.Arcade?.kills_dayone + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 14) {
                                        if (!stats?.SkyWars?.wins_kit_basic_solo_batguy) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.SkyWars?.wins_kit_basic_solo_batguy) {
                                            hw.quest.before = stats?.SkyWars?.wins_kit_basic_solo_batguy;
                                            hw.quest.requirement = stats?.SkyWars?.wins_kit_basic_solo_batguy + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 15) {
                                        if (!stats?.SkyWars?.wins_kit_advanced_solo_magician) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.SkyWars?.wins_kit_advanced_solo_magician) {
                                            hw.quest.before = stats?.SkyWars?.wins_kit_advanced_solo_magician;
                                            hw.quest.requirement = stats?.SkyWars?.wins_kit_advanced_solo_magician + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 16) {
                                        if (!stats?.SkyWars?.wins_kit_defending_team_batguy) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.SkyWars?.wins_kit_defending_team_batguy) {
                                            hw.quest.before = stats?.SkyWars?.wins_kit_defending_team_batguy;
                                            hw.quest.requirement = stats?.SkyWars?.wins_kit_defending_team_batguy + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 17) {
                                        if (!stats?.SkyWars?.wins_kit_attacking_team_enderman) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.SkyWars?.wins_kit_attacking_team_enderman) {
                                            hw.quest.before = stats?.SkyWars?.wins_kit_attacking_team_enderman;
                                            hw.quest.requirement = stats?.SkyWars?.wins_kit_attacking_team_enderman + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 18) {
                                        if (!stats?.Arcade?.candy_found_halloween_simulator) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.candy_found_halloween_simulator) {
                                            hw.quest.before = stats?.Arcade?.candy_found_halloween_simulator;
                                            hw.quest.requirement = stats?.Arcade?.candy_found_halloween_simulator + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 19) {
                                        if (!stats?.Arcade?.wins_halloween_simulator) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.Arcade?.wins_halloween_simulator) {
                                            hw.quest.before = stats?.Arcade?.wins_halloween_simulator;
                                            hw.quest.requirement = stats?.Arcade?.wins_halloween_simulator + r_quest.req_wins
                                        }
                                    } else if (r_quest.id == 20) {
                                        if (!stats?.MurderMystery?.kills_as_infected_hypixel_world_MURDER_INFECTION) {
                                            hw.quest.before = 0;
                                            hw.quest.requirement = r_quest.req_wins
                                        } else if (stats?.MurderMystery?.kills_as_infected_hypixel_world_MURDER_INFECTION) {
                                            hw.quest.before = stats?.MurderMystery?.kills_as_infected_hypixel_world_MURDER_INFECTION;
                                            hw.quest.requirement = stats?.MurderMystery?.kills_as_infected_hypixel_world_MURDER_INFECTION + r_quest.req_wins
                                        }
                                    }
                                } catch (error) {
                                    return interaction.reply({
                                        content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–ª—è –≤–∞—Å –∫–≤–µ—Å—Ç–∞!`,
                                        ephemeral: true
                                    })
                                }
                                userData.seasonal.halloween.quest.description = r_quest.description
                                userData.seasonal.halloween.quest.id = r_quest.id
                                userData.seasonal.halloween.quest.finished = false
                                const questEmbed = new EmbedBuilder()
                                    .setColor(`DarkGold`)
                                    .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –¥–ª—è ${interaction.user.username}`)
                                    .setDescription(`${interaction.member} –ø–æ–ª—É—á–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ:
\`${r_quest.description}\`

–ó–∞ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ \`‚ùï üéÉ –ñ–£–¢–ö–ê–Ø /spooky\``)
                                    .setTimestamp(Date.now())
                                    .setThumbnail(interaction.user.displayAvatarURL())
                                await interaction.reply({
                                    embeds: [questEmbed]
                                })
                                userData.cooldowns.hw_quest = Date.now() + (1000 * 60 * 60 * 16)
                                userData.save()
                            } else return interaction.reply({
                                content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–≤–µ—Å—Ç–∞ –¥–ª—è –≤–∞—Å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`
                            })
                        } else if (choice == `finish`) {
                            const reward = `893932177799135253`
                            const hw = userData.seasonal.halloween
                            if (hw.quest.finished === true) return interaction.reply({
                                content: `–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/seasonal halloween quest\`, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç!`,
                                ephemeral: true
                            })
                            let response = await fetch(`https://api.hypixel.net/player?key=${process.env.hypixel_apikey}&uuid=${userData.uuid}`)
                            if (response.ok) {
                                let json = await response.json()
                                let stats = json.player.stats
                                if (hw.quest.id == 1) {
                                    if (stats?.MurderMystery?.wins_spooky_mansion >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 2) {
                                    if (stats?.MurderMystery?.wins_darkfall >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 3) {
                                    if (stats?.MurderMystery["wins_widow's_den"] >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 4) {
                                    if (stats?.VampireZ?.human_wins >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 5) {
                                    if (stats?.MurderMystery?.kills_as_murderer >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 6) {
                                    if (stats?.Arcade?.wins_zombies_deadend >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 7) {
                                    if (stats?.Arcade?.wins_zombies_badblood >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 8) {
                                    if (stats?.Arcade?.wins_dayone >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`
                                    })
                                } else if (hw.quest.id == 9) {
                                    if (stats?.Arcade?.zombie_kills_zombies >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 10) {
                                    if (stats?.Arcade?.zombie_kills_zombies_deadend >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 11) {
                                    if (stats?.Arcade?.zombie_kills_zombies_badblood >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 12) {
                                    if (stats?.MurderMystery?.kills_as_infected >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 13) {
                                    if (stats?.Arcade?.kills_dayone >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    }
                                } else if (hw.quest.id == 14) {
                                    if (stats?.SkyWars?.wins_kit_basic_solo_batguy >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 15) {
                                    if (stats?.SkyWars?.wins_kit_advanced_solo_magician >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 16) {
                                    if (stats?.SkyWars?.wins_kit_defending_team_batguy >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 17) {
                                    if (stats?.SkyWars?.wins_kit_attacking_team_enderman >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 18) {
                                    if (stats?.Arcade?.candy_found_halloween_simulator >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 19) {
                                    if (stats?.Arcade?.wins_halloween_simulator >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                } else if (hw.quest.id == 20) {
                                    if (stats?.MurderMystery?.kills_as_infected_hypixel_world_MURDER_INFECTION >= hw.quest.requirement) {
                                        hw.quests_completed += 1
                                        hw.points += 5
                                        hw.quest.finished = true
                                        await member.roles.add(reward)
                                        const done = new EmbedBuilder()
                                            .setColor(`DarkGold`)
                                            .setTitle(`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–π –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`)
                                            .setDescription(`${interaction.member} –≤—ã–ø–æ–ª–Ω–∏–ª —Ö—ç–ª–ª–æ—É–∏–Ω—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ \`${hw.quest.description}\`! –û–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!

**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π**: ${hw.quests_completed}`)
                                        await interaction.reply({
                                            embeds: [done]
                                        })
                                    } else return interaction.reply({
                                        content: `–í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ: \`${userData.seasonal.halloween.quest.description}\`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω—Ü–∞ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.halloween.quest.requirement}
        
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–≤–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞!`,
                                        ephemeral: true
                                    })
                                }

                                userData.save()
                            }
                        }
                    }
                        break;
                    default:
                        break;
                }
            }
                break;

            default:
                break;
        }
    }
};