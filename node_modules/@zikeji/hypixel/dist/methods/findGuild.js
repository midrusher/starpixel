"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindGuild = void 0;
const Method_1 = require("../util/Method");
const ResultObject_1 = require("../util/ResultObject");
class FindGuild extends Method_1.Method {
    /**
     * Returns the id of the requested guild if found.
     * @example
     * ```typescript
     * const { guild } = await client.findGuild.byName("Mini Squid");
     * console.log(boosters);
     * // 553490650cf26f12ae5bac8f
     * ```
     * @category API
     */
    byName(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return ResultObject_1.getResultObject(yield this.client.call("findGuild", {
                byName: name,
            }), ["success"]);
        });
    }
    /**
     * Returns the id of the requested guild if found.
     * @example
     * ```typescript
     * const { guild } = await client.findGuild.byUuid("20934ef9488c465180a78f861586b4cf");
     * console.log(guild);
     * // 553490650cf26f12ae5bac8f
     * ```
     * @category API
     */
    byUuid(uuid) {
        return __awaiter(this, void 0, void 0, function* () {
            return ResultObject_1.getResultObject(yield this.client.call("findGuild", {
                byUuid: uuid,
            }), ["success"]);
        });
    }
}
exports.FindGuild = FindGuild;
//# sourceMappingURL=findGuild.js.map